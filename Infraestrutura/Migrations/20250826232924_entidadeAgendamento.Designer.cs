// <auto-generated />
using System;
using Infraestrutura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infraestrutura.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250826232924_entidadeAgendamento")]
    partial class entidadeAgendamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Agendamentos.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoAluno")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Aluno");

                    b.Property<int>("CodigoAula")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Aula");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAluno");

                    b.HasIndex("CodigoAula");

                    b.ToTable("Agendamento", (string)null);
                });

            modelBuilder.Entity("Dominio.Alunos.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("TipoPlano")
                        .HasMaxLength(150)
                        .HasColumnType("integer")
                        .HasColumnName("Tipo_Plano");

                    b.HasKey("Id");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("Dominio.Aulas.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("integer")
                        .HasColumnName("Capacidade_Maxima");

                    b.Property<DateTime>("DataAula")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Data_Aula");

                    b.Property<int>("TipoAula")
                        .HasColumnType("integer")
                        .HasColumnName("Tipo_Aula");

                    b.HasKey("Id");

                    b.ToTable("Aula", (string)null);
                });

            modelBuilder.Entity("Dominio.Agendamentos.Agendamento", b =>
                {
                    b.HasOne("Dominio.Alunos.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("CodigoAluno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Aulas.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("CodigoAula")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Aula");
                });
#pragma warning restore 612, 618
        }
    }
}
